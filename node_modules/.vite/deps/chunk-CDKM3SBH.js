import {
  createWithBsPrefix
} from "./chunk-6FWUWXAQ.js";
import {
  require_classnames,
  require_jsx_runtime,
  useBootstrapPrefix,
  useIsRTL
} from "./chunk-NRWJYICC.js";
import {
  __objRest,
  __spreadProps,
  __spreadValues,
  __toESM,
  require_react
} from "./chunk-NRTVHLRD.js";

// node_modules/react-bootstrap/esm/Popover.js
var import_classnames = __toESM(require_classnames());
var React2 = __toESM(require_react());

// node_modules/react-bootstrap/esm/PopoverHeader.js
var PopoverHeader_default = createWithBsPrefix("popover-header");

// node_modules/react-bootstrap/esm/PopoverBody.js
var PopoverBody_default = createWithBsPrefix("popover-body");

// node_modules/react-bootstrap/esm/helpers.js
var React = __toESM(require_react());
function getOverlayDirection(placement, isRTL) {
  let bsDirection = placement;
  if (placement === "left") {
    bsDirection = isRTL ? "end" : "start";
  } else if (placement === "right") {
    bsDirection = isRTL ? "start" : "end";
  }
  return bsDirection;
}

// node_modules/react-bootstrap/esm/Popover.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var defaultProps = {
  placement: "right"
};
var Popover = React2.forwardRef((_a, ref) => {
  var _b = _a, {
    bsPrefix,
    placement,
    className,
    style,
    children,
    body,
    arrowProps,
    popper: _,
    show: _1
  } = _b, props = __objRest(_b, [
    "bsPrefix",
    "placement",
    "className",
    "style",
    "children",
    "body",
    "arrowProps",
    "popper",
    "show"
  ]);
  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, "popover");
  const isRTL = useIsRTL();
  const [primaryPlacement] = (placement == null ? void 0 : placement.split("-")) || [];
  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);
  return (0, import_jsx_runtime2.jsxs)("div", __spreadProps(__spreadValues({
    ref,
    role: "tooltip",
    style,
    "x-placement": primaryPlacement,
    className: (0, import_classnames.default)(className, decoratedBsPrefix, primaryPlacement && `bs-popover-${bsDirection}`)
  }, props), {
    children: [(0, import_jsx_runtime.jsx)("div", __spreadValues({
      className: "popover-arrow"
    }, arrowProps)), body ? (0, import_jsx_runtime.jsx)(PopoverBody_default, {
      children
    }) : children]
  }));
});
Popover.defaultProps = defaultProps;
var Popover_default = Object.assign(Popover, {
  Header: PopoverHeader_default,
  Body: PopoverBody_default,
  POPPER_OFFSET: [0, 8]
});

export {
  Popover_default
};
//# sourceMappingURL=chunk-CDKM3SBH.js.map
